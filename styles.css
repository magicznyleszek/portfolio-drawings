/*
Variables (palette)
*/

:root {
  --c-vulcan: hsl(230, 30%, 10%);
  --c-link-water: hsl(230, 40%, 90%);
  --c-clairvoyant: hsl(290, 87%, 18%);
  --c-light-wisteria: hsl(281, 46%, 75%);

  /* Variables (on smaller devices) */
  /* TODO: see if this is sensible, of if rather we should do regular @media for resizing specific selectors */
  --space-sm: calc(0.5rem * 0.75);
  --space-md: calc(1rem * 0.75);
  --space-lg: calc(2rem * 0.75);
}

@media (min-width: 1000px) {
  :root {
    /* Variables (on bigger devices) */
    --space-sm: 0.5rem;
    --space-md: 1rem;
    --space-lg: 2rem;
  }
}

/*
Root stuff and some variables
*/

:root {
  background-color: var(--bg-color);
  transition: background 0.3s, color 0.3s;
  color: var(--text-color);
  font-family: sans-serif;
  font-size: 20px;
  line-height: 1.5rem;
  font-family: sans-serif;
  min-width: 100%;
  min-height: 100%;
  color-scheme: light dark;

  /* Light Mode colors */
  --bg-color: var(--c-link-water);
  --text-color: var(--c-vulcan);
  --accent-color: var(--c-clairvoyant);
}

@media (prefers-color-scheme: dark) {
  :root {
    /* Dark Mode colors */
    --bg-color: var(--c-vulcan);
    --text-color: var(--c-link-water);
    --accent-color: var(--c-light-wisteria);
  }
}

/*
Resets and base groundwork
*/

* {
  box-sizing: border-box;
  margin: 0;
}

:focus {
  outline: 0;
}

:focus-visible {
  outline: 0.25rem solid var(--accent-color);
}

a {
  color: inherit;
  text-decoration-style: dotted;
  border-radius: 0.25rem;
}

a:hover {
  text-decoration-style: solid;
}

img {
  max-width: 100%;
  height: auto;
  border-radius: 2px;
}

/*
Main layout
*/

body {
  padding: var(--space-lg);
  height: 100%;
}

[am-mainHeader] {
  margin-bottom: var(--space-lg);
}

[am-main] {
  margin: 0 auto;
}

[am-mainFooter] {
  margin-top: var(--space-lg);
}

/*
AMCSS Components
*/

[am-imageList] {
  list-style: none;
  padding: 0;
  margin: 0;
  display: inline-flex;
  flex-direction: row;
  flex-wrap: wrap;
}
[am-imageList~="small"] {
  gap: var(--space-sm);
}
[am-imageList~="medium"] {
  gap: var(--space-md);
}

[am-imageList-item],
[am-imageList-link],
[am-imageList-image] {
  display: block;
}

[am-category] {

}

[am-category]:not(:last-of-type) {
  margin-bottom: var(--space-md);
}

/* TODO: invalid selector, should be picked up by stylelint? */
[am-category]:not(:last-of-type):asdasda {
  margin-bottom: var(--space-md);
}

[am-category-header] {
  margin-bottom: var(--space-md);
}

[am-category-header-link] {

}

[am-breadcrumbs] {
  margin-bottom: var(--space-md);
}

[am-breadcrumbs-list] {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: row;
}

[am-breadcrumbs-list] > li:not(:last-of-type)::after {
  content: ' / ';
}

[am-breadcrumbs-list] > li {
  display: flex;
  flex-direction: row;
}
